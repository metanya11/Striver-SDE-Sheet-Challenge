/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {

    ListNode* rotate(ListNode* head){
        ListNode* t= head;
        
        
        while(t->next->next){
            t=t->next;
        }

        ListNode* forw=t->next;
        t->next= NULL;
        forw->next=head;
        head=forw;
        return head;
    }
public:
    ListNode* rotateRight(ListNode* head, int k) {

        if(k==0) return head;
        if(head==NULL || head->next==NULL) return head;
        ListNode* p1= head;
        int cnt=0;
        
        while(p1){
            p1=p1->next;
            cnt++;
        }

        k=k%cnt;

        for(int i=0; i<k; i++){
            head= rotate(head);
        }

        return head;

    }
};
