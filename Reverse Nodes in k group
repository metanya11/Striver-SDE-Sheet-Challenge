/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {

        int size = 0;
        ListNode *temp = head;
        while(temp!=NULL && size<k){
            temp = temp -> next;
            size++;
        }
        if(size < k)    return head;

        ListNode* prev=NULL;
        ListNode* forw=NULL;
        ListNode* val= head;
        int i=0;
        
        while(  i<k){
           
            forw=val->next;
            val->next=prev;
            prev=val;
            val=forw;
            i++;
        }
        
        if(forw!=NULL){
        head->next= reverseKGroup( forw, k);}

        return prev;
    }
};
